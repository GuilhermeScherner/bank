[tool.poetry]
name = "bank"
version = "0.1.0"
description = ""
authors = ["Guilherme <guibarasuol99@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
apiflask = {extras = ["async"], version = "^2.1.0"}
python-dotenv = "^1.0.0"
flask-httpauth = "^4.8.0"
sqlalchemy = "^2.0.23"
werkzeug = "^3.0.1"
pymysql = "^1.1.0"
pyjwt = "^2.8.0"


[tool.poetry.dev-dependencies]
pytest = "^7.2.1"
mypy = "^1.1.1"
isort = "^5.11.4"
pre-commit = "^3.0.1"
black = "^22.12.0"
autoflake = "^1.6.1"
pytest-cov = "^4.0.0"
anyio = "^3.6.2"
pytest-mock = "^3.10.0"
setuptools = "^69.0.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
wemake-python-styleguide = "^0.18.0"
pre-commit = "^3.6.0"
setuptools = "^69.0.2"

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["bank",]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true
exclude= ["bank/db/migrations", "bank/.venv"]

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
env = [
    "BANK_ENVIRONMENT=pytest",
    "BANK_DB_BASE=bank_test",
]
